name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Create ECR repository if it doesn't exist
      - name: Create ECR repository
        run: |
          REPO_NAME=dcgan-app
          aws ecr describe-repositories --repository-names $REPO_NAME || \
          aws ecr create-repository --repository-name $REPO_NAME

      # Step 4: Log in to ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 5: Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_NAME=dcgan-app
          IMAGE_TAG=latest
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      # Step 6: Tag Docker image for ECR
      - name: Tag Docker image
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          IMAGE_NAME=dcgan-app
          IMAGE_TAG=latest
          ECR_URI=$ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_NAME:$IMAGE_TAG
          docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_URI
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV

      # Step 7: Push Docker image to ECR
      - name: Push Docker image
        run: |
          docker push $ECR_URI
